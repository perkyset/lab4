trigger:
- main

pool:
  vmImage: 'windows-latest' # Change to 'ubuntu-latest' or another image as required

variables:
  FEED_URL: 'https://pkgs.dev.azure.com/S8G32H/Lab4/_packaging/Lab4/nuget/v3/index.json'
  PROJECT_NAME: 'Lab4'

steps:
# 1. Check out the code
- task: UseDotNet@2
  inputs:
    packageType: 'sdk'
    version: '6.x'
  displayName: 'Install .NET SDK'

# 2. Authenticate with Azure Artifacts feed
- script: |
    echo "Setting up NuGet authentication..."
    nuget sources add -Name AzureArtifacts -Source $(FEED_URL) -Username 'AzureDevOps' -Password $(System.AccessToken) -StorePasswordInClearText
  env:
    SYSTEM_ACCESSTOKEN: $(System.AccessToken)
  displayName: 'Configure NuGet Authentication'

# 3. Restore NuGet packages
- task: NuGetCommand@2
  inputs:
    command: 'restore'
    restoreSolution: '**/*.sln'
    feedsToUse: 'select'
    nugetFeed: 'https://pkgs.dev.azure.com/S8G32H/Lab4/_packaging/Lab4/nuget/v3/index.json'
  displayName: 'Restore NuGet Packages'

# 4. Build the solution
- task: DotNetCoreCLI@2
  inputs:
    command: 'build'
    projects: '**/*.csproj'
    arguments: '--configuration Release'
  displayName: 'Build Solution'

# 5. Run tests (if applicable)
- task: DotNetCoreCLI@2
  inputs:
    command: 'test'
    projects: '**/*Tests.csproj'
    arguments: '--configuration Release'
  displayName: 'Run Tests'

# 6. Publish artifacts (optional)
- task: PublishPipelineArtifact@1
  inputs:
    targetPath: '$(Build.ArtifactStagingDirectory)'
    artifact: 'drop'
  displayName: 'Publish Build Artifacts'
